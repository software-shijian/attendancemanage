<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.attendance.manage.dao.OutRequestMapper" >
  <resultMap id="BaseResultMap" type="com.attendance.manage.model.OutRequest" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="stuff_id" property="stuffId" jdbcType="BIGINT" />
    <result column="application_time" property="applicationTime" jdbcType="TIMESTAMP" />
    <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="type_id" property="typeId" jdbcType="BIGINT" />
    <result column="type_name" property="typeName" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="last_handler" property="lastHandler" jdbcType="BIGINT" />
    <result column="last_handler_userName" property="lastHandlerName"/>
    <result column="handler_history" property="handlerHistory"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from out_request
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.attendance.manage.model.OutRequest" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into out_request (id, create_date, modify_date, 
      stuff_id, application_time, begin_time, 
      end_time, type_id, description, 
      status, last_handler,handler_history)
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{stuffId,jdbcType=BIGINT}, #{applicationTime,jdbcType=TIMESTAMP}, #{beginTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{typeId,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{lastHandler,jdbcType=BIGINT},#{handlerHistory,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.attendance.manage.model.OutRequest" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update out_request
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      stuff_id = #{stuffId,jdbcType=BIGINT},
      application_time = #{applicationTime,jdbcType=TIMESTAMP},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      type_id = #{typeId,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      last_handler = #{lastHandler,jdbcType=BIGINT},
      handler_history = #{handlerHistory,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, create_date, modify_date, stuff_id, application_time, begin_time, end_time, 
    type_id, description, status, last_handler,handler_history
    from out_request
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, create_date, modify_date, stuff_id, application_time, begin_time, end_time, 
    type_id, description, status, last_handler
    from out_request
  </select>
  
  
  <select id="selectApproveByID" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select id, create_date, modify_date, stuff_id, application_time, begin_time, end_time,type_id, 
    (select lt.name from leave_type lt where lt.id=type_id) type_name, description, status, 
    (select s.username from stuff s where s.id=last_handler) last_handler_userName,
    last_handler
    from out_request where last_handler=#{userId,jdbcType=BIGINT} 
    <if test="_parameter.containsKey('status')">  
        AND status=#{status,jdbcType=INTEGER} 
    </if>
    <if test="_parameter.containsKey('status1')">  
        and status in (0,1)
    </if>
  </select>
  
  <!-- 查询我的申请 -->
  <select id="findMyApplyByStuffId" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select id, create_date, modify_date, stuff_id, application_time, begin_time, end_time, type_id,
    (select lt.name from out_type lt where lt.id=type_id) type_name, description, status, 
     (select s.username from stuff s where s.id=last_handler) last_handler_userName,
    last_handler
    from out_request
     where
     stuff_id=#{userId,jdbcType=BIGINT}
     <if test="_parameter.containsKey('status')">  
        and status=#{status,jdbcType=INTEGER} 
    </if>
  </select>
  
  
  <!--查询我的申请各种状态数量  -->
  <select id="findMyApplyAllConut" resultType="java.util.HashMap" parameterType="java.lang.Long" >
    select a.approve,b.ok_approve,c.no_approve,(a.approve+b.ok_approve+c.no_approve) all_approve
	from 
	(select count(*) as approve from out_request where stuff_id=#{id,jdbcType=BIGINT} and status=0) a,
	 (select count(*) as ok_approve from out_request where stuff_id=#{id,jdbcType=BIGINT} and status=1) b,
	 (select count(*) as no_approve from out_request where stuff_id=#{id,jdbcType=BIGINT} and status=2)  c
  </select>
  
  <!--查询我的审批各种状态数量  -->
  <select id="findMyApproveAllConut" resultType="java.util.HashMap" parameterType="java.lang.Long" >
    select a.approve,b.ok_approve,(a.approve+b.ok_approve) all_approve
	from 
	(select count(*) as approve from out_request where last_handler=#{id,jdbcType=BIGINT} and status=0) a,
	 (select count(*) as ok_approve from out_request where last_handler=#{id,jdbcType=BIGINT} and status=1) b
  </select>
  
  <!--查询申请详情  -->
  <select id="findApplyDetailByID" resultType="java.util.HashMap" parameterType="java.lang.Long" >
	select (select f.username from stuff f where f.id=stuff_id) username,
	(select lt.name from leave_type lt where lt.id=type_id) typeName,
	(select de.department_name from department de,stuff st where de.id=st.depart and st.id=stuff_id) departmentName,
	application_time,begin_time,end_time,description,
	(select sf.username from stuff sf where sf.id=last_handler) handlerName,id,
	status,handler_history,stuff_id
	from out_request
	where id=#{id,jdbcType=BIGINT}  
  </select>
</mapper>