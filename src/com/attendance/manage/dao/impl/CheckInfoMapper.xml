<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.attendance.manage.dao.CheckInfoMapper" >
  <resultMap id="BaseResultMap" type="com.attendance.manage.model.CheckInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="stuff_id" property="stuffId" jdbcType="BIGINT" />
  </resultMap>
  
  <resultMap id="StartAndEndResultMap" type="com.attendance.manage.model.CheckInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="stuff_id" property="stuffId" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from check_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.attendance.manage.model.CheckInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into check_info (id, check_time, stuff_id
      )
    values (#{id,jdbcType=BIGINT}, #{checkTime,jdbcType=TIMESTAMP}, #{stuffId,jdbcType=BIGINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.attendance.manage.model.CheckInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update check_info
    set check_time = #{checkTime,jdbcType=TIMESTAMP},
      stuff_id = #{stuffId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, check_time, stuff_id
    from check_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, check_time, stuff_id
    from check_info
  </select>
  
  <select id="selectAllAndSort" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select *
    from check_info ORDER BY check_time desc
  </select>
  
  <select id="selectAllStartAndEndTimes" resultMap="StartAndEndResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
	select start_time , end_time , stuff_id ,
		case when start_time &gt; (concat(date(start_time),' 8:30:00')) and start_time &lt; (concat(date(start_time),' 11:00:00')) and end_time &gt;= (concat(date(start_time),' 17:30:00')) then '迟到'
			 when end_time &gt; (concat(date(start_time),' 14:30:00')) and end_time &lt; (concat(date(start_time),' 17:30:00'))and start_time &lt;= (concat(date(start_time),' 8:30:00')) then '早退'
             when start_time &gt; (concat(date(start_time),' 8:30:00')) and start_time &lt; (concat(date(start_time),' 11:00:00')) and end_time &gt; (concat(date(start_time),' 14:30:00')) and end_time &lt; (concat(date(start_time),' 17:30:00')) then '迟到并早退'
			 when start_time &lt;= (concat(date(start_time),' 8:30:00')) and end_time &gt;= (concat(date(start_time),' 17:30:00'))then '正常出勤'
			 else'异常'
        end state
	from (SELECT 
        min(check_time) start_time ,
        max(check_time) end_time ,stuff_id 
	    FROM
	        check_info
		group by date(check_time) , stuff_id
		order by start_time desc) as temp  
  </select>
  
  
</mapper>