package com.attendance.manage.service.impl;

import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.omg.CORBA.PRIVATE_MEMBER;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.attendance.manage.dao.CheckInfoMapper;
import com.attendance.manage.model.CheckInfo;
import com.attendance.manage.service.CheckInfoService;

@Service
public class CheckInfoServiceImpl implements CheckInfoService {
	@Autowired
	private CheckInfoMapper checkInfoDao;
	private int year = 1970;
	private int month = 1;
	private int date = 1;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table check_info
	 * 
	 * @mbggenerated
	 */
	public int deleteByPrimaryKey(Long id) {
		return checkInfoDao.deleteByPrimaryKey(id);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table check_info
	 * 
	 * @mbggenerated
	 */
	public int insert(CheckInfo record) {
		return checkInfoDao.insert(record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table check_info
	 * 
	 * @mbggenerated
	 */
	public CheckInfo selectByPrimaryKey(Long id) {
		return checkInfoDao.selectByPrimaryKey(id);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table check_info
	 * 
	 * @mbggenerated
	 */
	public List<CheckInfo> selectAll() {
		return checkInfoDao.selectAll();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table check_info
	 * 
	 * @mbggenerated
	 */
	public int updateByPrimaryKey(CheckInfo record) {
		return checkInfoDao.updateByPrimaryKey(record);
	}

	public List<CheckInfo> selectAllAndSort() {
		return checkInfoDao.selectAllAndSort();
	}

	public List<CheckInfo> selectAllStartAndEndTimes() {
		return checkInfoDao.selectAllStartAndEndTimes();
	}

	public List<CheckInfo> selectStartAndEndTimesByDate(int year,int month,int date) {
		month = month - 1;
		this.year = year;
		this.month = month;
		this.date = date;
		Calendar calendar1;
		calendar1 = Calendar.getInstance();
		
		calendar1.set(this.year, this.month, this.date);
		
		Calendar calendar2 = Calendar.getInstance();
		
		List<CheckInfo> checkInfo = this.selectAllStartAndEndTimes();
		
		for (int i=0; i<checkInfo.size() ; i++){
			
			calendar2.setTime(checkInfo.get(i).getStartTime());
			if ((calendar1.get(Calendar.YEAR)!=calendar2.get(Calendar.YEAR))||(calendar1.get(Calendar.MONTH)!=calendar2.get(Calendar.MONTH))||(calendar1.get(Calendar.DATE)!=calendar2.get(Calendar.DATE))) {
				
				checkInfo.remove(i);
				i=i-1;
				
			}
		}
		return checkInfo;
	}

	public List<CheckInfo> selectStartAndEndTimesByDate(int year, int month) {
		month = month - 1;
		this.year = year;
		this.month = month;
		Calendar calendar1;
		calendar1 = Calendar.getInstance();
		
		calendar1.set(this.year, this.month, this.date);
		
		Calendar calendar2 = Calendar.getInstance();
		
		List<CheckInfo> checkInfo = this.selectAllStartAndEndTimes();
		
		for (int i=0; i<checkInfo.size() ; i++){
			
			calendar2.setTime(checkInfo.get(i).getStartTime());
			if ((calendar1.get(Calendar.YEAR)!=calendar2.get(Calendar.YEAR))||(calendar1.get(Calendar.MONTH)!=calendar2.get(Calendar.MONTH))) {
				
				checkInfo.remove(i);
				i=i-1;
				
			}
		}
		return checkInfo;
	}

	public List<CheckInfo> selectStartAndEndTimesByDate(int year) {
		this.year = year;
		Calendar calendar1;
		calendar1 = Calendar.getInstance();
		
		calendar1.set(this.year, this.month, this.date);
		
		Calendar calendar2 = Calendar.getInstance();
		
		List<CheckInfo> checkInfo = this.selectAllStartAndEndTimes();
		
		for (int i=0; i<checkInfo.size() ; i++){
			
			calendar2.setTime(checkInfo.get(i).getStartTime());
			if (calendar1.get(Calendar.YEAR)!=calendar2.get(Calendar.YEAR)) {
				
				checkInfo.remove(i);
				i=i-1;
				
			}
		}
		return checkInfo;
	}
	
}